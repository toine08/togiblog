---
import BlogPost from '../../components/BlogPost.astro';
import Layout from '../../layouts/Layout.astro';

interface MarkdownPost {
  frontmatter: {
    title: string;
    tags: string[];
    resume: string;
    [key: string]: any;
  };
  url: string;
}

export async function getStaticPaths() {
  const allPosts = import.meta.glob<MarkdownPost>('../../pages/posts/*.md', { eager: true });
  
  const uniqueTags: string[] = [...new Set(
    Object.values(allPosts)
      .flatMap((post: MarkdownPost) => post.frontmatter?.tags || [])
  )];
  
  return uniqueTags.map(tag => {
    const filteredPosts = Object.values(allPosts).filter((post: MarkdownPost) => 
      post.frontmatter?.tags?.includes(tag)
    );
    
    return {
      params: { tag },
      props: { 
        posts: filteredPosts,
        originalTag: tag 
      }
    };
  });
}

const { posts, originalTag } = Astro.props;
---

<Layout title={`Posts tagged with ${originalTag}`}>
    <div class={`container max-w-4xl mx-auto ${posts.length < 8 ? "-mt-80" : ""}`}>
  <h1 class="text-4xl text-black dark:text-white font-bold bg-gradient-to-r from-blue-600 to-blue-400 bg-clip-text text-transparent mb-6">
    Posts tagged with "{originalTag}"
  </h1>
  
  <ul class="space-y-4 mt-6">
    {posts.map((post: MarkdownPost) => <BlogPost url={post.url} title={post.frontmatter.title} resume={post.frontmatter.resume}/>)}
  </ul>
</div>
</Layout>